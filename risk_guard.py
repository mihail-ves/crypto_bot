import json, time
from logger import log_info, log_error
from core.price_feed import get_price
from trade_memory import get_last_buy_price

RISK_FILE = "risk_guard.json"

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–∏–∑–∏–∫-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ ===
def load_risk_config():
    try:
        with open(RISK_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {}

# === –ó–±–µ—Ä–µ–≥—Ç–∏ —Ä–∏–∑–∏–∫-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ ===
def save_risk_config(data):
    with open(RISK_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2)

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–æ–Ω–µ—Ç—É –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É ===
def track_asset(symbol):
    config = load_risk_config()
    if symbol not in config:
        config[symbol] = {
            "start_time": time.time(),
            "last_price": get_price(symbol),
            "max_drawdown": 0.0
        }
        save_risk_config(config)
        log_info(f"üõ° –†–∏–∑–∏–∫-–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –¥–ª—è {symbol}")

# === –û—Ü—ñ–Ω–∏—Ç–∏ —Ä–∏–∑–∏–∫ –ø–æ –º–æ–Ω–µ—Ç—ñ ===
def evaluate_risk(symbol, max_hold_hours=6, max_drawdown_pct=10):
    config = load_risk_config()
    if symbol not in config:
        log_error(f"‚ö†Ô∏è {symbol} –Ω–µ –≤—ñ–¥—Å—Ç–µ–∂—É—î—Ç—å—Å—è")
        return False, "–ú–æ–Ω–µ—Ç–∞ –Ω–µ –≤—ñ–¥—Å—Ç–µ–∂—É—î—Ç—å—Å—è"

    now = time.time()
    entry_time = config[symbol]["start_time"]
    hold_duration = (now - entry_time) / 3600

    current_price = get_price(symbol)
    last_buy = get_last_buy_price(symbol)
    if last_buy is None or current_price is None:
        return False, "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –æ—Ü—ñ–Ω–∫–∏"

    drawdown = ((last_buy - current_price) / last_buy) * 100
    config[symbol]["max_drawdown"] = max(config[symbol]["max_drawdown"], drawdown)
    save_risk_config(config)

    if drawdown >= max_drawdown_pct:
        return True, f"üîª –ü—Ä–æ—Å–∞–¥–∫–∞ {drawdown:.2f}% ‚â• {max_drawdown_pct}%"

    if hold_duration >= max_hold_hours:
        return True, f"‚è≥ –£—Ç—Ä–∏–º–∞–Ω–Ω—è {hold_duration:.2f} –≥–æ–¥ ‚â• {max_hold_hours} –≥–æ–¥"

    return False, f"‚úÖ –†–∏–∑–∏–∫ –≤ –º–µ–∂–∞—Ö –Ω–æ—Ä–º–∏: –ø—Ä–æ—Å–∞–¥–∫–∞ {drawdown:.2f}%, —á–∞—Å {hold_duration:.2f} –≥–æ–¥"
